-- MySQL Script generated by MySQL Workbench
-- 11/15/16 16:44:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema lareleve
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `lareleve` ;

-- -----------------------------------------------------
-- Schema lareleve
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `lareleve` DEFAULT CHARACTER SET utf8 ;
USE `lareleve` ;

-- -----------------------------------------------------
-- Table `lareleve`.`Roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Roles` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Roles` (
  `id` INT NOT NULL,
  `libellé` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libellé` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Poles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Poles` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Poles` (
  `id` INT NOT NULL,
  `chefPole` INT NOT NULL,
  `libellé` VARCHAR(45) GENERATED ALWAYS AS () VIRTUAL,
  PRIMARY KEY (`id`),
  INDEX `fk_Poles_Utilisateurs_chef_idx` (`chefPole` ASC),
  UNIQUE INDEX `libellé_UNIQUE` (`libellé` ASC),
  CONSTRAINT `fk_Poles_Utilisateurs_chef`
    FOREIGN KEY (`chefPole`)
    REFERENCES `lareleve`.`Utilisateurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Services` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Services` (
  `id` INT NOT NULL,
  `idPole` INT NOT NULL,
  `libellé` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Services_Poles_id_idx` (`idPole` ASC),
  UNIQUE INDEX `libellé_UNIQUE` (`libellé` ASC),
  CONSTRAINT `fk_Services_Poles_id`
    FOREIGN KEY (`idPole`)
    REFERENCES `lareleve`.`Poles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Utilisateurs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Utilisateurs` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Utilisateurs` (
  `id` INT NOT NULL,
  `idService` INT NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `nom` VARCHAR(255) NOT NULL,
  `prenom` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Utilisateurs_Services_id_idx` (`idService` ASC),
  CONSTRAINT `fk_Utilisateurs_Services_id`
    FOREIGN KEY (`idService`)
    REFERENCES `lareleve`.`Services` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`RolesUtilisateurs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`RolesUtilisateurs` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`RolesUtilisateurs` (
  `idRole` INT NOT NULL,
  `idUtilisateur` INT NOT NULL,
  PRIMARY KEY (`idRole`, `idUtilisateur`),
  INDEX `fk_RolesUtilisateurs_Utilisateurs_id_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_RolesUtilisateurs_Roles_id`
    FOREIGN KEY (`idRole`)
    REFERENCES `lareleve`.`Roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RolesUtilisateurs_Utilisateurs_id`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `lareleve`.`Utilisateurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Logements`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Logements` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Logements` (
  `id` INT NOT NULL,
  `idPOHI` INT NULL,
  `idGestimmLogement` INT NULL,
  `idGestimmMenages` INT NULL,
  `statut` VARCHAR(45) NOT NULL,
  `adresse` VARCHAR(255) NOT NULL,
  `etage` INT NULL,
  `digicode` VARCHAR(45) NULL,
  `direction` VARCHAR(255) NULL,
  `type` VARCHAR(45) NULL,
  `superficie` INT NULL,
  `loyer` INT NULL,
  `charges` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Menages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Menages` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Menages` (
  `id` INT NOT NULL,
  `idReferant` INT NULL,
  `idLogement` INT NULL,
  `dateEntree` DATETIME NULL,
  `dateSortie` DATETIME NULL,
  `adresseSortie` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Menages_Utilisateurs_referant_idx` (`idReferant` ASC),
  INDEX `fk_Menages_Logements1_idx` (`idLogement` ASC),
  CONSTRAINT `fk_Menages_Utilisateurs_referant`
    FOREIGN KEY (`idReferant`)
    REFERENCES `lareleve`.`Utilisateurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Menages_Logements1`
    FOREIGN KEY (`idLogement`)
    REFERENCES `lareleve`.`Logements` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Besoins`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Besoins` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Besoins` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Actes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Actes` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Actes` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Prestations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Prestations` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Prestations` (
  `id` INT NOT NULL,
  `idBesoin` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Prestations_Besoins_id_idx` (`idBesoin` ASC),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC),
  CONSTRAINT `fk_Prestations_Besoins_id`
    FOREIGN KEY (`idBesoin`)
    REFERENCES `lareleve`.`Besoins` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Individus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Individus` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Individus` (
  `id` INT NOT NULL,
  `idMenage` INT NOT NULL,
  `nomNaissance` VARCHAR(45) NOT NULL,
  `nomUsage` VARCHAR(45) NOT NULL,
  `prenom` VARCHAR(45) NOT NULL,
  `tel` INT NULL,
  `villeNaissance` VARCHAR(45) NULL,
  `statutMatrimonial` VARCHAR(45) NULL,
  `dateEntreeFr` DATETIME NULL,
  `statutFr` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Individus_Menages_id_idx` (`idMenage` ASC),
  CONSTRAINT `fk_Individus_Menages_id`
    FOREIGN KEY (`idMenage`)
    REFERENCES `lareleve`.`Menages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`PrestationsRealisees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`PrestationsRealisees` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`PrestationsRealisees` (
  `id` INT NOT NULL,
  `idPrestation` INT NOT NULL,
  `seqPrestation` INT NOT NULL,
  `idUtilisateur` INT NOT NULL,
  `idMenage` INT NULL,
  `idIndividu` INT NULL,
  `statut` VARCHAR(45) NOT NULL,
  `dateCreation` DATETIME NOT NULL,
  `dateFin` DATETIME NULL,
  `commentaire` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PrestationsRealisees_Prestations_id_idx` (`idPrestation` ASC),
  INDEX `fk_PrestationsRealisees_Menages_id_idx` (`idMenage` ASC),
  INDEX `fk_PrestationsRealisees_Individu_id_idx` (`idIndividu` ASC),
  INDEX `fk_PrestationsRealisees_Utilisateur_id_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_PrestationsRealisees_Prestations_id`
    FOREIGN KEY (`idPrestation`)
    REFERENCES `lareleve`.`Prestations` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PrestationsRealisees_Menages_id`
    FOREIGN KEY (`idMenage`)
    REFERENCES `lareleve`.`Menages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PrestationsRealisees_Individu_id`
    FOREIGN KEY (`idIndividu`)
    REFERENCES `lareleve`.`Individus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PrestationsRealisees_Utilisateur_id`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `lareleve`.`Utilisateurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`ActesRealises`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`ActesRealises` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`ActesRealises` (
  `id` INT NOT NULL,
  `idActe` INT NOT NULL,
  `seqActe` INT NOT NULL,
  `idUtilisateur` INT NOT NULL,
  `idMenage` INT NULL,
  `idIndividu` INT NULL,
  `idBesoin` INT NULL,
  `idPrestationRealisee` INT NULL,
  `statut` VARCHAR(45) NOT NULL,
  `dateRealisation` DATETIME NOT NULL,
  `commentaire` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_ActesRealisees_Actes_id_idx` (`idActe` ASC),
  INDEX `fk_ActesRealisees_Individu_id_idx` (`idIndividu` ASC),
  INDEX `fk_ActesRealisees_Menages_id_idx` (`idMenage` ASC),
  INDEX `fk_ActesRealisees_Besoins_id_idx` (`idBesoin` ASC),
  INDEX `fk_ActesRealisees_PrestationsRealises_id_idx` (`idPrestationRealisee` ASC),
  INDEX `fk_ActesRealisees_Utilisateurs_id_idx` (`idUtilisateur` ASC),
  CONSTRAINT `fk_ActesRealisees_Actes_id`
    FOREIGN KEY (`idActe`)
    REFERENCES `lareleve`.`Actes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActesRealisees_Menages_id`
    FOREIGN KEY (`idMenage`)
    REFERENCES `lareleve`.`Menages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActesRealisees_Individus_id`
    FOREIGN KEY (`idIndividu`)
    REFERENCES `lareleve`.`Individus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActesRealisees_Besoins_id`
    FOREIGN KEY (`idBesoin`)
    REFERENCES `lareleve`.`Besoins` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActesRealisees_PrestationsRealises_id`
    FOREIGN KEY (`idPrestationRealisee`)
    REFERENCES `lareleve`.`PrestationsRealisees` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ActesRealisees_Utilisateurs_id`
    FOREIGN KEY (`idUtilisateur`)
    REFERENCES `lareleve`.`Utilisateurs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Langues`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Langues` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Langues` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Collocation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Collocation` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Collocation` (
  `idGestimm` INT NOT NULL,
  `idLogement` INT NULL,
  `dateEntree` DATETIME NULL,
  PRIMARY KEY (`idGestimm`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Ressources`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Ressources` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Ressources` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libelle_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Langues`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Langues` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Langues` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`RessourcesIndividus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`RessourcesIndividus` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`RessourcesIndividus` (
  `idIndividu` INT NOT NULL,
  `idRessources` VARCHAR(45) NOT NULL,
  `montantRessource` INT NULL,
  PRIMARY KEY (`idIndividu`, `idRessources`),
  INDEX `fk_Individus_has_Ressources_Ressources1_idx` (`idRessources` ASC),
  INDEX `fk_Individus_has_Ressources_Individus1_idx` (`idIndividu` ASC),
  CONSTRAINT `fk_Individus_has_Ressources_Individus1`
    FOREIGN KEY (`idIndividu`)
    REFERENCES `lareleve`.`Individus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Individus_has_Ressources_Ressources1`
    FOREIGN KEY (`idRessources`)
    REFERENCES `lareleve`.`Ressources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`RessourcesMenages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`RessourcesMenages` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`RessourcesMenages` (
  `idMenage` INT NOT NULL,
  `idRessources` VARCHAR(45) NOT NULL,
  `montantRessource` INT NULL,
  PRIMARY KEY (`idMenage`, `idRessources`),
  INDEX `fk_Menages_has_Ressources_Ressources1_idx` (`idRessources` ASC),
  INDEX `fk_Menages_has_Ressources_Menages1_idx` (`idMenage` ASC),
  CONSTRAINT `fk_Menages_has_Ressources_Menages1`
    FOREIGN KEY (`idMenage`)
    REFERENCES `lareleve`.`Menages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Menages_has_Ressources_Ressources1`
    FOREIGN KEY (`idRessources`)
    REFERENCES `lareleve`.`Ressources` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`LanguesIndividus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`LanguesIndividus` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`LanguesIndividus` (
  `idIndividu` INT NOT NULL,
  `idLangue` VARCHAR(45) NOT NULL,
  `niveauLangue` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idIndividu`, `idLangue`),
  INDEX `fk_Individus_has_Langue_Langue1_idx` (`idLangue` ASC),
  INDEX `fk_Individus_has_Langue_Individus1_idx` (`idIndividu` ASC),
  CONSTRAINT `fk_Individus_has_Langue_Individus1`
    FOREIGN KEY (`idIndividu`)
    REFERENCES `lareleve`.`Individus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Individus_has_Langue_Langue1`
    FOREIGN KEY (`idLangue`)
    REFERENCES `lareleve`.`Langues` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`Nationnalites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`Nationnalites` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`Nationnalites` (
  `id` INT NOT NULL,
  `libelle` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `libellé_UNIQUE` (`libelle` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `lareleve`.`NationnalitesIndividus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lareleve`.`NationnalitesIndividus` ;

CREATE TABLE IF NOT EXISTS `lareleve`.`NationnalitesIndividus` (
  `idIndividu` INT NOT NULL,
  `idNationnalite` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idIndividu`, `idNationnalite`),
  INDEX `fk_Individus_has_Nationnalites_Nationnalites1_idx` (`idNationnalite` ASC),
  INDEX `fk_Individus_has_Nationnalites_Individus1_idx` (`idIndividu` ASC),
  CONSTRAINT `fk_Individus_has_Nationnalites_Individus1`
    FOREIGN KEY (`idIndividu`)
    REFERENCES `lareleve`.`Individus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Individus_has_Nationnalites_Nationnalites1`
    FOREIGN KEY (`idNationnalite`)
    REFERENCES `lareleve`.`Nationnalites` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `lareleve`;

DELIMITER $$

USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`Logements_AFTER_UPDATE` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`Logements_AFTER_UPDATE` AFTER UPDATE ON `Logements` 
FOR EACH ROW
BEGIN
	IF NEW.statut = "passif" THEN
		SET count = (SELECT COUNT(*) FROM `Menages` WHERE idLogement = NEW.id);
        IF count > 0 THEN
			SIGNAL SQLSTATE '45000' set message_text = 'Erreur : Logement affecté à un ménage';
        END IF;
		
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`Menages_BEFORE_INSERT` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`Menages_BEFORE_INSERT` BEFORE INSERT ON `Menages` 
FOR EACH ROW
BEGIN
	IF NEW.dateSortie != null AND NEW.dateEntree > dateSortie THEN
		SIGNAL SQLSTATE '45000' set message_text = 'Erreur : dateEntree > dateSortie';
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`Menages_BEFORE_UPDATE` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`Menages_BEFORE_UPDATE` BEFORE UPDATE ON `Menages` 
FOR EACH ROW
BEGIN
	IF NEW.dateSortie != null AND NEW.dateEntree > dateSortie THEN
		SIGNAL SQLSTATE '45000' set message_text = 'Erreur : dateEntree > dateSortie';
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`PrestationsRealisees_BEFORE_UPDATE` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`PrestationsRealisees_BEFORE_UPDATE` BEFORE UPDATE ON `PrestationsRealisees` FOR EACH ROW
BEGIN
	IF NEW.idMenage != 0 THEN
		SET NEW.idMenage = 0;
    END IF;
END
$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`RessourcesIndividus_BEFORE_INSERT` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`RessourcesIndividus_BEFORE_INSERT` BEFORE INSERT ON `RessourcesIndividus`
 FOR EACH ROW
BEGIN
    SET count = (SELECT COUNT(*) FROM `Ressources` WHERE id = NEW.idRessources AND type = "individu");
    
    IF count = 0 THEN
		SIGNAL SQLSTATE '45000' set message_text = "Erreur : la ressource n'est pas une ressource d'individu";
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`RessourcesIndividus_BEFORE_UPDATE` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`RessourcesIndividus_BEFORE_UPDATE` BEFORE UPDATE ON `RessourcesIndividus` 
FOR EACH ROW
BEGIN
    SET count = (SELECT COUNT(*) FROM `Ressources` WHERE id = NEW.idRessources AND type = "individu");
    
    IF count = 0 THEN
		SIGNAL SQLSTATE '45000' set message_text = "Erreur : la ressource n'est pas une ressource d'individu";
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`RessourcesMenages_BEFORE_INSERT` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`RessourcesMenages_BEFORE_INSERT` BEFORE INSERT ON `RessourcesMenages` 
FOR EACH ROW
BEGIN
    SET count = (SELECT COUNT(*) FROM `Ressources` WHERE id = NEW.idRessources AND type = "menage");
    
    IF count = 0 THEN
		SIGNAL SQLSTATE '45000' set message_text = "Erreur : la ressource n'est pas une ressource de ménage";
    END IF;
END$$


USE `lareleve`$$
DROP TRIGGER IF EXISTS `lareleve`.`RessourcesMenages_BEFORE_UPDATE` $$
USE `lareleve`$$
CREATE DEFINER = CURRENT_USER TRIGGER `lareleve`.`RessourcesMenages_BEFORE_UPDATE` BEFORE UPDATE ON `RessourcesMenages` FOR EACH ROW
BEGIN
    SET count = (SELECT COUNT(*) FROM `Ressources` WHERE id = NEW.idRessources AND type = "menage");
    
    IF count = 0 THEN
		SIGNAL SQLSTATE '45000' set message_text = "Erreur : la ressource n'est pas une ressource de ménage";
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

START TRANSACTION;

-- -----------------------------------------------------
-- Data for table `lareleve`.`Roles`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Roles` (`id`, `libellé`) VALUES (1, 'TS');
INSERT INTO `lareleve`.`Roles` (`id`, `libellé`) VALUES (2, 'DAE');
INSERT INTO `lareleve`.`Roles` (`id`, `libellé`) VALUES (3, 'DG');
INSERT INTO `lareleve`.`Roles` (`id`, `libellé`) VALUES (4, 'Accueil');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Poles`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Poles` (`id`, `chefPole`, `libellé`) VALUES (1, 1, 'ASILE');
INSERT INTO `lareleve`.`Poles` (`id`, `chefPole`, `libellé`) VALUES (2, 2, 'URGENCE');
INSERT INTO `lareleve`.`Poles` (`id`, `chefPole`, `libellé`) VALUES (3, 3, 'INSERTION');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Services`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Services` (`id`, `idPole`, `libellé`) VALUES (1, 1, 'LA PAUSE');
INSERT INTO `lareleve`.`Services` (`id`, `idPole`, `libellé`) VALUES (2, 2, 'SAFEC');
INSERT INTO `lareleve`.`Services` (`id`, `idPole`, `libellé`) VALUES (3, 3, 'CHRS insertion');
INSERT INTO `lareleve`.`Services` (`id`, `idPole`, `libellé`) VALUES (4, 3, 'CHRS urgence');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Utilisateurs`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Utilisateurs` (`id`, `idService`, `password`, `username`, `nom`, `prenom`) VALUES (1, 4, '1234', 'roger', 'Roger', 'Rabbit');
INSERT INTO `lareleve`.`Utilisateurs` (`id`, `idService`, `password`, `username`, `nom`, `prenom`) VALUES (2, 3, 'password', 'henry', 'Henry', 'Gaule');
INSERT INTO `lareleve`.`Utilisateurs` (`id`, `idService`, `password`, `username`, `nom`, `prenom`) VALUES (3, 2, 'mdp', 'quentin-elsa', 'Quentin-Elsa', 'Dunand-Navarro');
INSERT INTO `lareleve`.`Utilisateurs` (`id`, `idService`, `password`, `username`, `nom`, `prenom`) VALUES (4, 1, 'azerty', 'popek', 'Florian', 'Popek');

-- -----------------------------------------------------
-- Data for table `lareleve`.`RolesUtilisateurs`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`RolesUtilisateurs` (`idRole`, `idUtilisateur`) VALUES (1, 1);
INSERT INTO `lareleve`.`RolesUtilisateurs` (`idRole`, `idUtilisateur`) VALUES (2, 2);
INSERT INTO `lareleve`.`RolesUtilisateurs` (`idRole`, `idUtilisateur`) VALUES (3, 3);
INSERT INTO `lareleve`.`RolesUtilisateurs` (`idRole`, `idUtilisateur`) VALUES (4, 4);

-- -----------------------------------------------------
-- Data for table `lareleve`.`Logements`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Logements` (`id`, `idPOHI`, `idGestimmLogement`, `idGestimmMenages`, `statut`, `adresse`, `etage`, `digicode`, `direction`, `type`, `superficie`, `loyer`, `charges`) VALUES (1, 10, 100, 1000, 'passif', '17 rue François', 3, '1206', 'Au fond à droite', 'Immeuble', 35, 400, 50);
INSERT INTO `lareleve`.`Logements` (`id`, `idPOHI`, `idGestimmLogement`, `idGestimmMenages`, `statut`, `adresse`, `etage`, `digicode`, `direction`, `type`, `superficie`, `loyer`, `charges`) VALUES (2, 20, 200, 2000, 'actif', '1 boulevard du Boulevard', 1, NULL, 'A l\'adresse comme indiquée', 'Maison', 50, 500, 0);
INSERT INTO `lareleve`.`Logements` (`id`, `idPOHI`, `idGestimmLogement`, `idGestimmMenages`, `statut`, `adresse`, `etage`, `digicode`, `direction`, `type`, `superficie`, `loyer`, `charges`) VALUES (3, 30, 300, 3000, 'passif', '123 rue du Quatre-Cinq-Six', 2, '1234', NULL, 'Immeuble', 60, 750, 80);
INSERT INTO `lareleve`.`Logements` (`id`, `idPOHI`, `idGestimmLogement`, `idGestimmMenages`, `statut`, `adresse`, `etage`, `digicode`, `direction`, `type`, `superficie`, `loyer`, `charges`) VALUES (4, 40, 400, 4000, 'actif', '99999 rue de l\'Infini', 99, 'unsigned int (-1)', 'Suivre l\'hyperbole', 'Palace', 999, 1, 0.1);

-- -----------------------------------------------------
-- Data for table `lareleve`.`Menages`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Menages` (`id`, `idReferant`, `idLogement`, `dateEntree`, `dateSortie`, `adresseSortie`) VALUES (1, 4, 1, '25/10/2003', NULL, 'Hell');
INSERT INTO `lareleve`.`Menages` (`id`, `idReferant`, `idLogement`, `dateEntree`, `dateSortie`, `adresseSortie`) VALUES (2, 3, 2, '25/11/2004', NULL, '42 rue de la Vie');
INSERT INTO `lareleve`.`Menages` (`id`, `idReferant`, `idLogement`, `dateEntree`, `dateSortie`, `adresseSortie`) VALUES (3, 2, 3, '5/3/2007', '1/1/9999', NULL);
INSERT INTO `lareleve`.`Menages` (`id`, `idReferant`, `idLogement`, `dateEntree`, `dateSortie`, `adresseSortie`) VALUES (4, 1, 4, '1/1/2009', '2/1/2009', 'Cimetière');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Besoins`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Besoins` (`id`, `libelle`) VALUES (1, 'Logement');
INSERT INTO `lareleve`.`Besoins` (`id`, `libelle`) VALUES (2, 'Administratif');
INSERT INTO `lareleve`.`Besoins` (`id`, `libelle`) VALUES (3, 'Santé');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Actes`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Actes` (`id`, `libelle`) VALUES (1, 'RDV partenaire');
INSERT INTO `lareleve`.`Actes` (`id`, `libelle`) VALUES (2, 'VAD');
INSERT INTO `lareleve`.`Actes` (`id`, `libelle`) VALUES (3, 'Entretien de pré-admission');
INSERT INTO `lareleve`.`Actes` (`id`, `libelle`) VALUES (4, 'RDV spontanné');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Prestations`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Prestations` (`id`, `idBesoin`, `libelle`) VALUES (1, 1, 'Recherche d\'un logement auprès de Stephane Plaza');
INSERT INTO `lareleve`.`Prestations` (`id`, `idBesoin`, `libelle`) VALUES (2, 2, 'Licenciement de Cécile');
INSERT INTO `lareleve`.`Prestations` (`id`, `idBesoin`, `libelle`) VALUES (3, 3, 'Achat de mercurochrome');
INSERT INTO `lareleve`.`Prestations` (`id`, `idBesoin`, `libelle`) VALUES (4, 3, 'Achat de pansement');
INSERT INTO `lareleve`.`Prestations` (`id`, `idBesoin`, `libelle`) VALUES (5, 2, 'Achat de dosette pour la cafétière');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Individus`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Individus` (`id`, `idMenage`, `nomNaissance`, `nomUsage`, `prenom`, `tel`, `villeNaissance`, `statutMatrimonial`, `dateEntreeFr`, `statutFr`) VALUES (1, 1, 'Adi', 'Jaques l\'éventeur', 'Jacques', 0600000000, 'Montélimar', 'En couple', '1/1/2000', 'Asile');
INSERT INTO `lareleve`.`Individus` (`id`, `idMenage`, `nomNaissance`, `nomUsage`, `prenom`, `tel`, `villeNaissance`, `statutMatrimonial`, `dateEntreeFr`, `statutFr`) VALUES (2, 1, 'Moon', 'Salomon', 'Salomon', 0600000001, 'Valence', 'En couple', '1/1/2001', 'Réfugié');
INSERT INTO `lareleve`.`Individus` (`id`, `idMenage`, `nomNaissance`, `nomUsage`, `prenom`, `tel`, `villeNaissance`, `statutMatrimonial`, `dateEntreeFr`, `statutFr`) VALUES (3, 2, 'Laconis', 'Petit Nicolas', 'Nicolas', 0600000002, 'Loriol', '', '10/10/2001', NULL);
INSERT INTO `lareleve`.`Individus` (`id`, `idMenage`, `nomNaissance`, `nomUsage`, `prenom`, `tel`, `villeNaissance`, `statutMatrimonial`, `dateEntreeFr`, `statutFr`) VALUES (4, 3, 'B', 'Aaa', 'A', 0600000003, 'Livron', 'Célibataire', '10/11/2001', NULL);
INSERT INTO `lareleve`.`Individus` (`id`, `idMenage`, `nomNaissance`, `nomUsage`, `prenom`, `tel`, `villeNaissance`, `statutMatrimonial`, `dateEntreeFr`, `statutFr`) VALUES (5, 4, '2', '111', '1', NULL, 'Ardèche', 'Célibataire', '10/12/2001', NULL);

-- -----------------------------------------------------
-- Data for table `lareleve`.`PrestationsRealisees`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`PrestationsRealisees` (`id`, `idPrestation`, `seqPrestation`, `idUtilisateur`, `idMenage`, `idIndividu`, `statut`, `dateCreation`, `dateFin`, `commentaire`) VALUES (1, 1, 20013, 1, 1, NULL, 'Validé', '10/10/2013', '15/10/2013', 'Stéphane Plaza était très gentil');
INSERT INTO `lareleve`.`PrestationsRealisees` (`id`, `idPrestation`, `seqPrestation`, `idUtilisateur`, `idMenage`, `idIndividu`, `statut`, `dateCreation`, `dateFin`, `commentaire`) VALUES (2, 4, 21555, 2, NULL, NULL, 'Validé', '20/11/2013', '11/11/2016', 'Les pansements se font rares');
INSERT INTO `lareleve`.`PrestationsRealisees` (`id`, `idPrestation`, `seqPrestation`, `idUtilisateur`, `idMenage`, `idIndividu`, `statut`, `dateCreation`, `dateFin`, `commentaire`) VALUES (3, 5, 3422, 3, NULL, NULL, 'Validé', '22/11/2014', '22/11/2014', 'On a encore eu de la chance');

-- -----------------------------------------------------
-- Data for table `lareleve`.`ActesRealises`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`ActesRealises` (`id`, `idActe`, `seqActe`, `idUtilisateur`, `idMenage`, `idIndividu`, `idBesoin`, `idPrestationRealisee`, `statut`, `dateRealisation`, `commentaire`) VALUES (1, 1, 12, 3, 1, NULL, NULL, 1, 'Honoré', '17/10/2013', 'Stéphane Plaza nous a vraiment aidé sur ce coup !');
INSERT INTO `lareleve`.`ActesRealises` (`id`, `idActe`, `seqActe`, `idUtilisateur`, `idMenage`, `idIndividu`, `idBesoin`, `idPrestationRealisee`, `statut`, `dateRealisation`, `commentaire`) VALUES (2, 3, 6, 4, NULL, 4, 1, NULL, 'A venir', DEFAULT, 'A faire rapidement');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Ressources`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Ressources` (`id`, `libelle`, `type`) VALUES (1, 'RSA', 'individu');
INSERT INTO `lareleve`.`Ressources` (`id`, `libelle`, `type`) VALUES (2, 'Alloc', 'menage');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Langues`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Langues` (`id`, `libelle`) VALUES (1, 'Français');
INSERT INTO `lareleve`.`Langues` (`id`, `libelle`) VALUES (2, 'Ardéchois');
INSERT INTO `lareleve`.`Langues` (`id`, `libelle`) VALUES (3, 'Breton');
INSERT INTO `lareleve`.`Langues` (`id`, `libelle`) VALUES (4, 'Togolais');

-- -----------------------------------------------------
-- Data for table `lareleve`.`RessourcesIndividus`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`RessourcesIndividus` (`idIndividu`, `idRessources`, `montantRessource`) VALUES (1, '1', 999);
INSERT INTO `lareleve`.`RessourcesIndividus` (`idIndividu`, `idRessources`, `montantRessource`) VALUES (2, '1', 60);
INSERT INTO `lareleve`.`RessourcesIndividus` (`idIndividu`, `idRessources`, `montantRessource`) VALUES (3, '1', 40);
INSERT INTO `lareleve`.`RessourcesIndividus` (`idIndividu`, `idRessources`, `montantRessource`) VALUES (4, '1', 20);
INSERT INTO `lareleve`.`RessourcesIndividus` (`idIndividu`, `idRessources`, `montantRessource`) VALUES (5, '1', 0);

-- -----------------------------------------------------
-- Data for table `lareleve`.`RessourcesMenages`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`RessourcesMenages` (`idMenage`, `idRessources`, `montantRessource`) VALUES (1, '2', 300);
INSERT INTO `lareleve`.`RessourcesMenages` (`idMenage`, `idRessources`, `montantRessource`) VALUES (2, '2', 400);

-- -----------------------------------------------------
-- Data for table `lareleve`.`LanguesIndividus`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`LanguesIndividus` (`idIndividu`, `idLangue`, `niveauLangue`) VALUES (1, '1', 'Bon');
INSERT INTO `lareleve`.`LanguesIndividus` (`idIndividu`, `idLangue`, `niveauLangue`) VALUES (2, '2', 'Moyen');
INSERT INTO `lareleve`.`LanguesIndividus` (`idIndividu`, `idLangue`, `niveauLangue`) VALUES (3, '1', 'Bon');
INSERT INTO `lareleve`.`LanguesIndividus` (`idIndividu`, `idLangue`, `niveauLangue`) VALUES (4, '3', 'Très bon');
INSERT INTO `lareleve`.`LanguesIndividus` (`idIndividu`, `idLangue`, `niveauLangue`) VALUES (5, '4', 'Muet');

-- -----------------------------------------------------
-- Data for table `lareleve`.`Nationnalites`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`Nationnalites` (`id`, `libelle`) VALUES (1, 'Française');
INSERT INTO `lareleve`.`Nationnalites` (`id`, `libelle`) VALUES (2, 'Anglaise');
INSERT INTO `lareleve`.`Nationnalites` (`id`, `libelle`) VALUES (3, 'Marocaine');

-- -----------------------------------------------------
-- Data for table `lareleve`.`NationnalitesIndividus`
-- -----------------------------------------------------
INSERT INTO `lareleve`.`NationnalitesIndividus` (`idIndividu`, `idNationnalite`) VALUES (1, '3');
INSERT INTO `lareleve`.`NationnalitesIndividus` (`idIndividu`, `idNationnalite`) VALUES (2, '3');
INSERT INTO `lareleve`.`NationnalitesIndividus` (`idIndividu`, `idNationnalite`) VALUES (3, '2');
INSERT INTO `lareleve`.`NationnalitesIndividus` (`idIndividu`, `idNationnalite`) VALUES (4, '2');
INSERT INTO `lareleve`.`NationnalitesIndividus` (`idIndividu`, `idNationnalite`) VALUES (5, '1');

COMMIT;
